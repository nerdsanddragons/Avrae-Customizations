{{gSource=query[0] if get_gvar(query[0]) else ""}}
{{gvar=get_gvar(gSource) if gSource else ""}}
{{help = query[0].lower() in ['help', '?']}}

{{Combat={x.name:{"name":x.name,"ac":x.ac,"hp":x.hp,"init":x.init,"initmod":x.initmod,"maxhp":x.maxhp,"temphp":x.temphp,"note":x.note,"ratio":x.ratio,"hp_str":x.hp_str(),"type":x.type,"level":x.level,"resists":{"resist":x.resists.resist,"vuln":x.resists.vuln,"immune":x.resists.immune},"effects":{y.name:{"name":y.name,"duration":y.duration,"remaining":y.remaining,"conc":y.conc,"effect":y.effect}for y in x.effects},"attacks":x.attacks}for x in combat().combatants} if query[0]=="combat" and combat() else []}}

{{cvar=([x for x in get_raw().cvars if query[1].lower() in x.lower()]+[''])[0] if len(query)>1 and query[0] in 'cvars' else ''}}
{{got=get(cvar,"")}}
{{current = Combat if query[0] == "combat" else (set('loaded', True) or load_json(got) if got[0] in '{[' else got) if got else get_raw() if not gSource else set('loaded',True) or load_json(gvar) if gvar[0] in '[{' and gvar[-1] in '}]' and gvar[:2]!='{{' else gvar}}
{{query=query[1:] if gSource or query[0]=="combat" else query}}
{{key=''}}

{{path=("combat().combatants" if not query else f"""combat().get_combatant('{combat().get_combatant(query[0]).name}')""") if Combat else f"{name} - get_raw()" if not gSource and not cvar else ("load_json(" if get('loaded') else "")+f"get_gvar(\\\"{gSource}\\\")"+(")" if get('loaded') else "") if gSource else ("load_json(" if get('loaded') else "")+f"get(\\\"{cvar}\\\")"+(")" if get('loaded') else "")}}

{{[set("key",([k for k in current if item and item.lower()==k.lower()]+[k for k in current if item and item.lower() in k.lower()]+[''])[0] if typeof(current)=="SafeDict" else int(item) if item.isdigit() and typeof(current)=="SafeList" and int(item) in range(len(current)) else "") or set("path",((path if Combat and query[0].lower() in str(key).lower() else path[:-8]+f".get_effect('{key}')" if Combat and len(query) > 2 and query[1].lower() in 'effects' and query[2].lower() in str(key).lower() else path+f"[{key}]" if str(key).isdigit() else path+f".{key}") if key is not None else path+'')) or set("current",current[key] if key!='' else current) for item in query]}}

{{display=[f'**{key}**: '+(str(current[key]) if len(str(current[key]))<maxWidth else str(current[key])[:maxWidth] + '...') for key in current.keys()] if typeof(current)=="SafeDict" else [f'**[{x}]**: {str(current[x])[:maxWidth]}'+('' if len(str(current[x]))<maxWidth else '...') for x in range(len(current))] if typeof(current)=="SafeList" else 0}}
{{out = ("\n".join([x for x in display]) if display else str(current)).replace('"', "\\\"")}}

-title "{{"I browse on point" if help else path.strip('.').replace('..','')}}"
-desc "{{"This alias allows you to 'browse' `get_raw()`, gvars, cvars, and combat.\nOnce you're in the mode you want, you can make a search through different levels of the selected object using space separated search terms. This alias has fuzzy-search-like behaviour.\n\nExamples:\n`!browse skills acro` will bring you to `get_raw().skills.acrobatics`, and display the value.\n`!browse att 0 na` will bring you to `get_raw().attacks[0].name`, and display the name of your first attack.\n`!browse combat or1 ac` will bring you to `combat().get_combatant('or1').ac`, displaying the current ac of OR1.\n\n**__Modes__**\n\n`!browse [search]` - Browses your characters `get_raw()`\n`!browse <gvarid> [search]` - Browses that gvar, and loads it as a json if it is one\n`!browse cvar <cvarname> [search]` - Browses that cvar, and loads it as a json if it is one\n`!browse combat [search]` - Browses the channels `!init` by combatant." if help else out if len(out)<2000 else f"{out[:2000]}... [truncated due to length]"}}"
-footer "{{'' if help else "!browse ?"}}"
-t 600